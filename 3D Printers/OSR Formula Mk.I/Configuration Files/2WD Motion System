[gcode_arcs]
resolution: 0.1

[pause_resume]

[temperature_sensor Stepper_Y]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: -20
max_temp: 200

[multi_pin stepper_fans]
pins: PA8, PE5, PD12, PD13

[controller_fan stepper_x]
pin: multi_pin:stepper_fans
max_power: 1.0
fan_speed: 1
kick_start_time: 0
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_1CF3BF1D4E5737374D202020FF110C2B-if00
speed: 5.
lift_speed: 5.
default_model_name: textured_hot
x_offset: 0.
y_offset: 43.15
trigger_distance: 2.
trigger_dive_threshold: 1.
trigger_hysteresis: 0.006
z_settling_time: 5
cal_nozzle_z: 0.2
cal_floor: 0.2
cal_ceil: 5.
cal_speed: 1.
cal_move_speed: 10.
mesh_main_direction: y
#mesh_overscan: 1
mesh_cluster_size: 1
mesh_runs: 1
zero_reference_cluster_size: 1.
accel_scale: 16g
contact_max_hotend_temperature: 340
home_xy_position: 185, 187.5 #non-resume
#home_xy_position: 30, 50 #resume
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 350
home_method: contact #non-resume
#home_method: proximity #resume
home_method_when_homed: proximity
home_autocalibrate: unhomed 
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y

[force_move]
enable_force_move: True

[beacon model pex_cold]
model_coef = 2.091322421909709,
	2.2981978831088345,
	0.43600683710752,
	0.0002527984247947351,
	0.15761854723320692,
	0.3082797585199502,
	-0.2157318286112442,
	-0.3670312403728196,
	0.13008167472336452,
	0.1630885468156838
model_domain = 1.8869920049280332e-07,1.9214954106370377e-07
model_range = 0.200000,5.000000
model_temp = 33.510296
model_offset = 0.000

[z_tilt]
z_positions: 185, 300
    340, 10 
    20, 10 
points: 185, 300
    340, 10 
    20, 10 
speed: 350
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075

[skew_correction]

#[safe_z_home]
#home_xy_position: 180, 180
#speed: 100
#z_hop: 10
#z_hop_speed: 5

[bed_mesh]
speed: 500
horizontal_move_z: 2
mesh_min: 20, 45
mesh_max: 340, 340
algorithm: bicubic
probe_count: 25, 25
adaptive_margin: 5
scan_overshoot: 5

[printer]
kinematics: corexy
max_velocity: 450  
max_accel: 15000 
max_z_velocity: 10
max_z_accel: 15
square_corner_velocity: 5

[input_shaper]

[adxl345]
cs_pin: ebb36: PB12
spi_software_sclk_pin: ebb36: PB10
spi_software_mosi_pin: ebb36: PB11
spi_software_miso_pin: ebb36: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345 
accel_chip: beacon
probe_points: 185, 185, 20

[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: tmc5160_stepper_x:virtual_endstop
homing_retract_dist: 0
position_endstop: -22
position_min: -22
position_max: 370
homing_speed: 100

[tmc5160 stepper_x]
cs_pin: PC4
spi_bus: spi1
diag1_pin: ^!PG6
driver_SGT: 3
run_current: 1.75
sense_resistor: 0.075
#stealthchop_threshold: 999999

[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: tmc5160_stepper_y:virtual_endstop
homing_retract_dist: 0
position_endstop: -2
position_min: -2
position_max: 370
homing_speed: 100

[tmc5160 stepper_y]
cs_pin: PD11
spi_bus: spi1
diag1_pin: ^!PG9
driver_SGT: 3
run_current: 1.75
sense_resistor: 0.075
#stealthchop_threshold: 999999

[stepper_z] #Back
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 4
endstop_pin: probe: z_virtual_endstop
position_max: 370
position_min: -15
homing_speed: 10.0
second_homing_speed: 3
homing_retract_dist: 10

[tmc2209 stepper_z]
uart_pin: PC6
diag_pin: PG10
run_current: 0.700
#stealthchop_threshold: 999999
#driver_SGTHRS: 100

[stepper_z1] #Right
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 4
#endstop_pin: probe:z1_virtual_endstop

[tmc2209 stepper_z1]
uart_pin: PC7
diag_pin: PG11
run_current: 0.700
#stealthchop_threshold: 999999
#driver_SGTHRS: 100

[stepper_z2] #Left
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 4
#endstop_pin: probe:z2_virtual_endstop

[tmc2209 stepper_z2]
uart_pin: PF2
diag_pin: PG12
run_current: 0.700
#stealthchop_threshold: 999999
#driver_SGTHRS: 100

### MACROS ###
[gcode_macro _HOME_PRE_AXIS]
gcode:
  # Adapt this for your printer.
  {% set HOME_CURRENT = 0.65 %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

[gcode_macro _HOME_POST_AXIS]
gcode:
  {% set axis = params.AXIS %}
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}

  # Move away
  SAVE_GCODE_STATE NAME=home_post_axis
  G91
  G0 {axis}0 F3600
  RESTORE_GCODE_STATE NAME=home_post_axis

  # Make sure StallGuard registers are cleared
  M400
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_PRE_AXIS]
gcode:
  # Adapt this for your printer.
  {% set HOME_CURRENT = 0.65 %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

[gcode_macro _HOME_POST_AXIS]
gcode:
  {% set axis = params.AXIS %}
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}

  # Move away
  SAVE_GCODE_STATE NAME=home_post_axis
  G91
  G0 {axis}0 F3600
  RESTORE_GCODE_STATE NAME=home_post_axis

  # Make sure StallGuard registers are cleared
  M400
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro M600]
gcode: PAUSE X=60 Y=60

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

	RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro SPEED_TEST]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X10 Y10     F20000
        G1 X360 Y360 F20000
        G1 X10 Y10     F20000
        G1 X360 Y360 F20000

        G1 X10 Y360 F20000

        G1 X360 Y10 F20000
        G1 X10 Y360 F20000
        G1 X360 Y10 F20000
        G1 X10 Y360 F20000

        G1 X10 Y10 F20000
        G1 X360 Y10 F20000
        G1 X360 Y360 F20000
        G1 X10 Y360 F20000
        G1 X10 Y10 F20000
        G28 X10 Y10
        GET_POSITION
